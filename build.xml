<?xml version="1.0" encoding="UTF-8"?>
<project name="tutorial-osgi" 
	xmlns:artifact="antlib:org.apache.maven.artifact.ant"
	xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors"
	xmlns:rcmp="antlib:org.apache.tools.ant.types.resources.comparators" 
	default="setup" >
	
	<!--
	References:
	http://felix.apache.org/site/integrating-felix-with-eclipse.html
	http://docs.oracle.com/javase/7/docs/api/java/io/FilePermission.html
	http://docs.oracle.com/javase/7/docs/api/java/lang/RuntimePermission.html
	http://docs.oracle.com/javase/7/docs/api/index.html?java/security/BasicPermission.html
	http://eclipse.org/equinox/documents/quickstart-framework.php
	-->

	<path id="maven-ant-tasks.classpath" path="antlib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" onerror="ignore" />

	<description>
    	Launching various OSGI examples.
    </description>
	
	
	<!-- ================================================================== -->
	<!-- Set up                                                             -->
	<!-- ================================================================== -->
	<target name="-setup.hasMavenAntTask">
		<condition property="hasMavenAntTask" else="false">
			<available file="antlib/maven-ant-tasks-2.1.3.jar" />
		</condition>
	</target>
	
	<target name="-setup.getMavenAntTask" unless="${hasMavenAntTask}">
		<get 
			src="http://central.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar" 
			dest="antlib"
			ignoreerrors="no"
			verbose="true"
		/>
	</target>
	
	<target name="-setup.init">
		<mkdir dir="antlib"/>
	</target>
	
	<target name="setup" depends="-setup.init, -setup.hasMavenAntTask, -setup.getMavenAntTask" description="Set up the environment. You need to run this before any other example.">
		<echo>Setup Completed</echo>
	</target>
	<!-- ================================================================== -->
	<!-- Set up                                                             -->
	<!-- ================================================================== -->
	
	
	<target name="-run.equinox.classpath">
		<artifact:dependencies pathId="equinox.classpath">
			<dependency groupId="org.eclipse.equinox" artifactId="osgi" version="3.1.1" />
			<dependency groupId="org.osgi" artifactId="org.osgi.core" version="6.0.0" />
			<dependency groupId="org.eclipse.equinox" artifactId="org.eclipse.equinox.common" version="3.6.0" />
			<dependency groupId="org.eclipse.birt.runtime.3_7_1" artifactId="org.eclipse.update.configurator" version="3.3.100" />			
		</artifact:dependencies>
	</target>
	
	

	<!-- classpath to run Felix -->
	<target name="-run.felix.classpath">
		
		<artifact:dependencies pathId="felix.classpath">
			<dependency groupId="org.osgi" artifactId="org.osgi.core" version="6.0.0" />
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.main" version="4.6.0" />
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.framework" version="4.6.0" />
		</artifact:dependencies>
		
		<artifact:dependencies pathId="felix.main.classpath">
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.main" version="4.6.0" scope="compile" />
		</artifact:dependencies>	
	
		<!-- build the 'felix.defaultbundles' classpath that contains all the jars shipped with Felix by default -->
		<artifact:dependencies pathId="tmp.felix.defaultbundles">
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.gogo.shell" version="0.10.0" />
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.gogo.runtime" version="0.12.1" />
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.gogo.command" version="0.14.0" />
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.bundlerepository" version="2.0.2" />
		</artifact:dependencies>
		<path id="felix.defaultbundles">	
			<restrict>
				<path refid="tmp.felix.defaultbundles" />
				<rsel:contains text=".felix." casesensitive="no" />
			</restrict>
		</path>
		
		<artifact:dependencies pathId="tmp.felix.logservicebundle">
			<dependency groupId="org.apache.felix" artifactId="org.apache.felix.log" version="1.0.1" />
		</artifact:dependencies>
		<path id="felix.logservicebundle">	
			<restrict>
				<path refid="tmp.felix.logservicebundle" />
				<rsel:contains text=".felix." casesensitive="no" />
			</restrict>
		</path>		
		
	</target>


	<macrodef name="mvn">
		<attribute name="commands"  />
		<element name="some-tasks" optional="yes" />
		<sequential>
			<exec executable="bash" newenvironment="false" spawn="false">
				<arg value="-c" />
				<arg value="mvn @{commands}" />
			</exec>
		</sequential>
	</macrodef>
	
	<target name="-mvn.clean">
		<mvn commands="clean"/>
	</target>

	<target name="mvn.install">
		<exec executable="bash" newenvironment="false" spawn="false">
			<arg value="-c" />
			<arg value="mvn install" />
		</exec>
	</target>

	<target name="clean">
		<mvn commands="clean"/>
	</target>


	<target name="felix">
		
		<echo>${toString:felix.classpath}</echo>

		<java classname="org.apache.felix.main.Main" >
			<permissions>
				<grant class="java.util.PropertyPermission" name="*" actions="read,write" />
				<grant class="java.lang.RuntimePermission" name="*" />
				<grant class="java.io.FilePermission" name="&lt;&lt;ALL FILES&gt;&gt;" actions="read,write" />
				<grant class="java.lang.reflect.ReflectPermission" name="suppressAccessChecks" />
				<grant class="java.net.NetPermission" name="specifyStreamHandler" />
				<grant class="java.security.SecurityPermission" name="*" />
				<grant class="org.osgi.framework.AdminPermission" name="*" actions="resolve,context,execute" />
				<grant class="java.io.FilePermission" name="*" actions="read" />
			</permissions>
			<classpath refid="felix.classpath" />
			<sysproperty key="felix.config.properties" value="file://${basedir}/config.properties" />
		</java>
	</target>
	
	<!--
	<target name="felix2">
		<java jar="original/felix.jar" fork="true">			
			<sysproperty key="felix.config.properties" value="file://${basedir}/config.properties" />
		</java>
	</target>
	-->	
	
	<target name="felix3">
		
		<delete dir="felix-cache" />
		
		<echo>${toString:felix.main.classpath}</echo>
		
		<path id="mainjar">	
			<restrict>
				<path refid="felix.main.classpath" />
				<rsel:contains text=".main" casesensitive="no" />
			</restrict>
		</path>
		<echo>${toString:mainjar}</echo>
		
		<java jar="${toString:mainjar}" fork="true">
			<classpath refid="felix.main.classpath" />
			<sysproperty key="felix.config.properties" value="file://${basedir}/config.properties" />
		</java>
		
		<echo>${felix.out}</echo>

	</target>
	
	<target name="equinox.command-line" depends="-run.equinox.classpath" description="Equinox command line params">
						
		<path id="equinox.main.jar">
			<first>
				<path refid="equinox.classpath" />
			</first>
		</path>
		
		<echo>${toString:equinox.main.jar}</echo>
		<java jar="${toString:equinox.main.jar}" fork="true" >
			<classpath refid="equinox.classpath" />
			<!--
			<arg line="-console"/>
			-->
			<arg line="-install ./bundle"/>
		</java>		
		

	</target>	
	
	<target name="equinox" depends="-run.equinox.classpath">
				
		<echo>${toString:equinox.classpath}</echo>
		
		<path id="equinox.main.jar">
			<first>
				<path refid="equinox.classpath" />
			</first>
		</path>
		
		<java jar="${toString:equinox.main.jar}" fork="true" >
			<classpath refid="equinox.classpath" />
			<arg line="-console"/>
		</java>		
		
		<!--
		<path id="mainjar">	
			<restrict>
				<path refid="felix.main.classpath" />
				<rsel:contains text=".main" casesensitive="no" />
			</restrict>
		</path>
		<echo>${toString:mainjar}</echo>
		
		<java jar="${toString:mainjar}" fork="true" outputproperty="felix.out">
			<classpath refid="felix.main.classpath" />
			<sysproperty key="felix.config.properties" value="file://${basedir}/config.properties" />
		</java>
		
		<echo>${felix.out}</echo>
		-->
	</target>	

	<target name="bundle">
		<mkdir dir="bundle"/>
		<delete>
			<fileset dir="bundle">
				<include name="*.jar"/>
			</fileset>
		</delete>
		<copy todir="bundle" failonerror="no">
			<fileset dir="osgi-listener/target" >
				<include name="*.jar"/>
			</fileset>
		</copy>
		<copy todir="bundle" failonerror="no">
			<fileset dir="osgi-service/target" >
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>
	

	
	
	
	<target name="example-felix-standard-bundles" depends="-mvn.clean, -run.felix.classpath, bundle" description="Run bare Felix with Gogo console.">
		
		<copy todir="bundle">
			<path refid="felix.defaultbundles" />			
		</copy>
		
		<antcall target="felix3" inheritall="true" inheritrefs="true" />
		
	</target>
	
	<target name="example-felix-hello-world" depends="-mvn.clean, -run.felix.classpath, bundle" description="Run the Felix Gogo shell with an 'Hello World' bundle.">
		
		<copy todir="bundle">
			<path refid="felix.defaultbundles" />
		</copy>
		
		<mvn commands="install -pl hello-world"/>
		<copy todir="bundle" file="hello-world/target/hello-world.jar" />
		
		<antcall target="felix3" inheritall="true" inheritrefs="true" />
		
	</target>	

	<target name="example-felix-service-listener" depends="-mvn.clean, -run.felix.classpath, bundle" description="Run a service and a related listener.">
		
		<copy todir="bundle">
			<path refid="felix.defaultbundles" />
		</copy>
		
		<mvn commands="install -pl osgi-listener"/>
		<mvn commands="install -pl osgi-service"/>
		
		<copy todir="bundle" file="osgi-service/target/sample-service.jar" />
		<copy todir="bundle" file="osgi-listener/target/sample-service-listener.jar" />
		
		<antcall target="felix3" inheritall="true" inheritrefs="true" />
		
	</target>

</project>
